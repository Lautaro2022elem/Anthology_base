[logic@blck_val_bandit_minigame]
active = walker@main_minigame
suitable = {=check_npc_name(blck_val_bandit_minigame)} true
prior = 200
on_death = death@minigame
level_spot = quest_npc

[walker@main_minigame]
path_walk = bandit_minigame_walk
path_look = bandit_minigame_look
on_info  = {=check_crowkiller_state(finished) =crowkiller_winned =crowkiller_game_type(highscore) -blck_val_bandit_base_minigame_first_win} walker@catch_minigame %=play_sound(blck_val_bandit_minigame_man_win_first) +blck_val_bandit_base_minigame_first_win%
on_info2 = {=check_crowkiller_state(finished) =crowkiller_winned =crowkiller_game_type(highscore) +blck_val_bandit_base_minigame_first_win} walker@catch_minigame %=play_sound(blck_val_bandit_minigame_man_win_player)%
on_info3 = {=check_crowkiller_state(finished) =crowkiller_winned !crowkiller_game_type(highscore)} walker@catch_minigame %=play_sound(blck_val_bandit_minigame_man_win_npc)%
on_info4 = {=check_crowkiller_state(finished) !crowkiller_winned} walker@catch_minigame %=play_sound(blck_val_bandit_minigame_man_lose)%
on_info5 = {=check_crowkiller_state(breaked)} walker@catch_minigame %=play_sound(blck_val_bandit_minigame_man_gone)%
meet = meet@minigame

[walker@catch_minigame]
path_walk = bandit_minigame_walk
path_look = bandit_minigame_look
on_signal = sound_end | walker@wait_minigame %+blck_val_bandit_base_minigame_talked_at_end%
meet = meet@minigame

[walker@wait_minigame]
path_walk = bandit_minigame_walk
path_look = bandit_minigame_look
on_info = {=check_crowkiller_state(valiable)} walker@main_minigame
meet = meet@minigame

[meet@minigame]
close_snd_hello = blck_val_bandit_bookmaker_meet
close_snd_bye = blck_val_bandit_bookmaker_meet_bye
close_anim 		= nil
close_victim 	= nil
far_anim 		= nil
far_victim 		= nil
close_distance  = 0
far_distance 	= 0
close_snd_distance = 3
use = {!is_playing_sound} true, false
allow_break = false
trade_enable = false
meet_on_talking = false

[death@minigame]
on_info = nil %+blck_val_bandit_base_minigame_dead%
